(()=>{"use strict";class i{constructor(i,s){this.fila=i,this.columna=s,this.visitada=!1,this.vecinos=[]}agregarVecino(i){this.vecinos.push({casilla:i,intentado:!1})}}const s=(i,s)=>!isNaN(i)&&i>=0&&i<s,t=(i,t,o)=>s(i,o)&&s(t,o);class o{constructor(i){this.n=i,this.casillas=[],this._crearCasillas(),this._asignarVecinos()}_crearCasillas(){for(let s=0;s<this.n;s++){this.casillas[s]=[];for(let t=0;t<this.n;t++)this.casillas[s][t]=new i(s,t)}}_asignarVecinos(){const i=[2,1,-1,-2,-2,-1,1,2],s=[1,2,2,1,-1,-2,-2,-1];for(let o=0;o<this.n;o++)for(let a=0;a<this.n;a++)for(let n=0;n<8;n++){const e=o+i[n],r=a+s[n];t(e,r,this.n)&&this.casillas[o][a].agregarVecino(this.casillas[e][r])}}obtenerCasilla(i,s){if(!t(i,s,this.n))throw new Error("Posici\xf3n fuera del tablero: (".concat(i,", ").concat(s,")"));return this.casillas[i][s]}}class a{constructor(i,s){this.posicionActual=i,this.casillaInicial=i,this.historial=[i],this.solucion=[i],this.movimientos=0,this.retrocesos=0,this.casillasVisitadas=1,this.totalCasillas=s,i.visitada=!0}avanzarA(i){for(let s of this.posicionActual.vecinos)if(s.casilla===i){s.intentado=!0;break}this.posicionActual=i,this.historial.length<1e5&&this.historial.push(i),this.solucion.push(i),this.movimientos++,i.visitada=!0,this.casillasVisitadas++}retroceder(){if(this.solucion.length>1){const i=this.solucion.pop();i.visitada=!1;const s=this.solucion[this.solucion.length-1];this.historial.length<1e5&&this.historial.push(s);for(let t of s.vecinos)if(t.casilla===i){t.intentado=!1;break}this.posicionActual=s,this.retrocesos++,this.casillasVisitadas--}}recorridoCompleto(){return this.casillasVisitadas===this.totalCasillas}reiniciar(i){for(let s=0;s<this.solucion.length;s++)this.solucion[s].visitada=!1;this.historial=[i],this.solucion=[i],this.posicionActual=i,this.movimientos=0,this.retrocesos=0,this.casillasVisitadas=1,i.visitada=!0}}function n(i){let s=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(i.recorridoCompleto())return!s||i.posicionActual.vecinos.some(s=>s.casilla===i.casillaInicial);const t=i.posicionActual.vecinos.filter(i=>!i.casilla.visitada&&!i.intentado).map(i=>i.casilla);if(0===t.length)return!1;t.sort(()=>Math.random()-.5);for(const o of t){if(i.avanzarA(o),n(i,s))return!0;i.retroceder()}return!1}function e(i,s){self.postMessage({tipo:i,datos:s})}function r(i){return i<1e3?"".concat(Math.round(i),"ms"):"".concat((i/1e3).toFixed(2),"s")}function c(i,s){return i.length>s?{historial:i.slice(0,s),historialMuestreado:!0,historialOriginalLength:i.length}:{historial:i,historialMuestreado:!1}}function l(i,s,t){let o=0;e("progreso",{tiempoEjecucion:"0ms"});const a=i.avanzarA.bind(i);i.avanzarA=s=>{if(o++,o%500===0){e("progreso",{tiempoEjecucion:r(performance.now()-t),iteraciones:o,movimientos:i.movimientos,retrocesos:i.retrocesos})}return a(s)};const c=n(i,s);return i.avanzarA=a,c}self.onmessage=i=>{const{tipo:s,datos:t}=i.data;if("iniciar"!==s)return;const{tamano:n,recorridoCerrado:h,filaInicial:u,columnaInicial:d}=t;try{const i=new o(n).obtenerCasilla(u,d),s=new a(i,n*n),t=performance.now(),m=l(s,h,t),f={solucionEncontrada:m,tiempoEjecucion:r(performance.now()-t),movimientos:s.movimientos,retrocesos:s.retrocesos};m?(Object.assign(f,c(s.historial,3e4)),f.solucion=s.solucion):(Object.assign(f,c(s.historial,3e3)),f.solucion=[],f.historialMuestreado?f.mensaje="No se encontr\xf3 soluci\xf3n. Mostrando primeros 3,000 de ".concat(s.historial.length.toLocaleString()," movimientos explorados."):f.mensaje="No se encontr\xf3 soluci\xf3n."),e("completado",f)}catch(m){e("error",{mensaje:m.message,stack:m.stack})}}})();
//# sourceMappingURL=528.c5879ffe.chunk.js.map